# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY2 }}'

    - id: 'deploy'
      uses: 'google-github-actions/deploy-appengine@v0'
  # This workflow contains a single job called "build"
  # build:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #    #- name: Initialize Google Cloud SDK
  #      #uses: zxyle/publish-gae-action@master
  #      #with:
  #      # service_account_email: ${{ secrets.GCP_SA_EMAIL }}
  #      # service_account_key: ${{ secrets.GCP_SA_KEY }}
  #      # project_id: ${{ secrets.PROJECT_ID }}
  #       # An optional variables parameter can be used
  #     #  gae_variables: ${{ secrets.GAE_VARIABLES }}
  #    - name: Deploy to Google App Engine
  #      uses: atRobertoFlores/gae_deploy_action@master
  #      with:
  #       service_account: ${{ secrets.GCP_SA_KEY }}
  #       project_name: ${{ secrets.PROJECT_ID }}

  #   # - name: Publish app to Google App Engine
  #    #  run: |
  #     #  # This client-secret.json is converted by GCP_SA_KEY.
  #      # gcloud auth activate-service-account ${{ secrets.GCP_SA_EMAIL }} --key-file=client-secret.json
  #       #gcloud config set project ${{ secrets.PROJECT_ID }}
  #       #gcloud -q app deploy app.yaml --promote

  #       # Suppose you need a cron task.
  #       # gcloud -q app deploy cron.yaml
